# Generated by Django 4.2.6 on 2024-12-15 10:21

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GetPostChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=100, unique=True)),
                ('channel_link', models.CharField(max_length=100)),
                ('channel_id', models.CharField(max_length=30, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_telegram_client.channel_type')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=500, unique=True)),
                ('caption', models.BooleanField(default=False)),
                ('photo', models.BooleanField(default=False)),
                ('delete_status', models.BooleanField(default=True)),
                ('single_photo', models.BooleanField(default=False)),
                ('send_status', models.BooleanField(default=False)),
                ('photo_count', models.IntegerField(default=0)),
                ('end', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel_from', models.ForeignKey(blank=True, limit_choices_to={'my_channel': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_channel_messages', to='app_telegram_client.getpostchannel')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='PostSenderBot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bot_token', models.CharField(max_length=100, unique=True)),
                ('bot_link', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'post_sender_bot',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('telegram_api_id', models.IntegerField(unique=True)),
                ('telegram_api_hash', models.CharField(max_length=100, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'telegram_client',
                'ordering': ['-created_at'],
                'unique_together': {('telegram_api_id', 'telegram_api_hash')},
            },
        ),
        migrations.CreateModel(
            name='PostChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=100, unique=True)),
                ('channel_link', models.CharField(max_length=100)),
                ('channel_id', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager_bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_telegram_client.postsenderbot')),
            ],
        ),
        migrations.CreateModel(
            name='Message_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_status', models.BooleanField(default=False)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_channel', models.ForeignKey(blank=True, limit_choices_to={'my_channel': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_channel', to='app_telegram_client.getpostchannel')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_telegram_client.message')),
                ('to_channel', models.ForeignKey(blank=True, limit_choices_to={'my_channel': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_channel', to='app_telegram_client.postchannel')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_telegram_client.channel_type')),
            ],
            options={
                'db_table': 'client_message_history',
            },
        ),
        migrations.CreateModel(
            name='Filename',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('is_photo', models.BooleanField(default=False)),
                ('is_caption', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_telegram_client.message')),
            ],
        ),
        migrations.CreateModel(
            name='KeywordChannelAds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_telegram_client.getpostchannel')),
            ],
            options={
                'db_table': 'keywordchannelads',
                'unique_together': {('text', 'channel')},
            },
        ),
    ]
